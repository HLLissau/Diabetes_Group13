{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"List of hospitals\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [\"onClick\"];\n\nconst _hoisted_3 = /*#__PURE__*/_createTextVNode(\"Patients list\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($props.hospitals, h => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: h.id\n    }, [_createElementVNode(\"button\", {\n      onClick: $event => $options.deleteHospital(h.id)\n    }, \"Delete\", 8\n    /* PROPS */\n    , _hoisted_2), _createTextVNode(\" - \" + _toDisplayString(h.name) + \" - \", 1\n    /* TEXT */\n    ), _createVNode(_component_router_link, {\n      to: {\n        name: 'ListPatients',\n        params: {\n          id: h.id\n        }\n      }\n    }, {\n      default: _withCtx(() => [_hoisted_3]),\n      _: 2\n      /* DYNAMIC */\n\n    }, 1032\n    /* PROPS, DYNAMIC_SLOTS */\n    , [\"to\"])]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  ))])]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAA0B,IAA1B,EAA0B,IAA1B,EAAI,mBAAJ,EAAqB;AAAA;AAArB;;;;iDAOsE;;;;;uBARxEC,oBAWM,KAXN,EAWM,IAXN,EAWM,CAVJC,UAUI,EATJF,oBAQK,IARL,EAQK,IARL,EAQK,oBAPFC,oBAMME,SANN,EAMM,IANN,EAMMC,YAJOC,gBAIP,EAJEC,CAAc,IAAb;yBAFTL,oBAMM,IANN,EAMM;AALEM,SAAG,EAAED,CAAC,CAACE;AAKT,KANN,GAGCR,oBAAqD,QAArD,EAAqD;AAA5CS,aAAK,YAAEC,wBAAeJ,CAAC,CAACE,EAAjB;AAAqC,KAArD,EAAsC,QAAtC,EAA4C;AAAA;AAA5C,MAA4CG,UAA5C,oBAAqD,QACrDC,iBAAGN,CAAC,CAACO,IAAL,CADqD,GACzC,OACZ;AAAA;OAAAC,aAA6FC,sBAA7F,EAA6F;AAA/EC,QAAE;AAAAH;AAAAI;AAAAT,cAAwCF,CAAC,CAACE;AAA1C;AAAA;AAA6E,KAA7F;wBAAkE,MAAa;;;;KAA/E;;AAAA,cALD;GAMM,CANN;;AAAA,GAOE,EARL,CASI,CAXN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_Fragment","_renderList","$props","h","key","id","onClick","$options","_hoisted_2","_toDisplayString","name","_createVNode","_component_router_link","to","params"],"sourceRoot":"","sources":["C:\\Users\\rolfe\\OneDrive - Danmarks Tekniske Universitet\\Dokumenter\\Software Fagprojekt\\Diabetes_Group13\\hospital_frontend\\src\\components\\ListHospital.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h2>List of hospitals</h2>\r\n    <ul>\r\n       <li\r\n        v-bind:key=\"h.id\"\r\n        v-for=\"h in hospitals\">\r\n        <button @click=\"deleteHospital(h.id)\">Delete</button> -\r\n        {{ h.name }} -\r\n        <router-link :to=\"{ name: 'ListPatients', params: { id: h.id } }\">Patients list</router-link>\r\n        </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n\r\n<script>\r\nexport default {\r\n  name: 'ListHospital',\r\n  props: ['hospitals'],\r\n  methods: {\r\n    deleteHospital(id) {\r\n      this.axios\r\n        .delete(this.$backend.getUrlDeleteHospital(id))\r\n        .then(() => {\r\n          this.$emit('hospital-deleted')\r\n        })\r\n    }\r\n  }\r\n}\r\n</script>"]},"metadata":{},"sourceType":"module"}